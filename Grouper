import java.util.*;
import java.util.stream.Collectors;

/**
 * Author : Nancy Chauhan
 * Date: 23rd june 2022
 * CoderByte Challenge
 */
 
class Grouper {

   public static String Grouper(String str) {

        Map<Integer, List<String>> map = new TreeMap<>();

        List<String> list = Arrays.asList(str.split(";"));

        // This was my first try: SUCCESS
        /*map = list.stream()
                .map(x-> x.split("-"))
                .collect(Collectors.groupingBy(x-> Integer.parseInt(x[1].substring(0, x.length-1)) * 10,
                Collectors.mapping(e -> e[0] + "-" + e[1], Collectors.toList())));*/
        
        // This was my second try: SUCCESS
        /*map = list.stream()
               .collect(Collectors.groupingBy(x-> Integer.parseInt(x.split("-")[1].substring(0, x.split("-")[1].length()-1)) * 10, Collectors.toList()));*/

        // The shortest and BEST SOLUTION working
        map = list.stream().collect(Collectors.groupingBy(x-> Math.round((Integer.parseInt(x.split("-")[1]) / 10 )) * 10, Collectors.toList()));

        return prepareFinalString(map);
    }

    private static String prepareFinalString(Map<Integer, List<String>> map) {
        String result = map.entrySet()
                .stream()
                .map(e -> e.getKey() + ":" + e.getValue()
                        .stream()
                        .sorted((s1,s2) -> s1.compareTo(s2))
                        .sorted((e1,e2) -> Integer.compare(Integer.parseInt(e1.split("-")[1]),Integer.parseInt(e2.split("-")[1])))
                        .collect(Collectors.joining(";")))
                .collect(Collectors.joining(";"));
        return result;
    }

    public static void main (String[] args) {
        Scanner s = new Scanner(System.in);
        System.out.print(Grouper("Kevin-25;Simon-22;Larry-25;Anna-22"));
    }
}
